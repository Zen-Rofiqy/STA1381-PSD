}
)
install_load('ggrepel')
#                             -=( Label Pie Chart )=-
lab.p <- list(
geom_label_repel( aes(label = paste0(perc,"(",n,")")),
position = position_stack_and_nudge(vjust = 0.5, x = 0.65),
direction='y', fontface = 'bold', color = 'white',
box.padding = unit(0.35, "lines"),
point.padding = unit(0.5, "lines"), segment.color = '#454545',
size=10)
)
#                           -=( THEME Pie Chart )=-
theme.p <- list(
theme_void()  ,
theme(
text = element_text(size = 36),
axis.text.y = element_text(vjust = .5, face = "bold"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5) )
)
#                           -=( Pie Chart FUNCTION )=-
plot.p <- function(dt, title = "Pice Chart"){
install_load("ggplot2", "dplyr", "viridis", "ggrepel", "tidyverse",'scales')
#DATA FRAME
df <- data.frame(ket = dt) %>%
#Frequency
group_by(ket) %>%
count() %>%
ungroup() %>%
mutate(perc = percent(n/sum(n), accuracy = 0.1, trim = FALSE))
#PIE CHART
sp <- ggplot(data=df, aes(x = "", y = n, fill = ket)) +
geom_col(width = 1, color = "white", linewidth = 2,
position = position_stack()) +
coord_polar(theta = "y") +
scale_alpha_manual(values = c("0"=0, "1"=1, "2"=0.7), guide=F) +
scale_x_discrete(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(title = title) + #Title
#COLORING
scale_fill_viridis(alpha = 0.75, #Opacity
begin = 0.2, #Color pallte scale begins
end = 0.5, #Color pallte scale ends
direction = -1, #Flip color scale
discrete = T, #Discrete Value
option = "D") + #Color Palette
theme.p + #Theme
xlab("") + ylab("") + lab.p #Labels
return(sp)
}
install_load('readxl','dplyr','kableExtra')
data <- read_xlsx("data.xlsx", sheet="Laptop")
data <- data[,-c(1,2)]
cat("Jumlah Kolom:", ncol(data), "\n")
cat("Jumlah Baris:", nrow(data), "\n")
kable(head(data)) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Mencari indeks baris dan kolom yang mengandung NA
na.idx <- which(is.na(data), arr.ind = TRUE)
cat("Banyaknya data NA : ", nrow(na.idx))
# Menampilkan data raw dengan baris dan kolom yang mengandung NA
install_load('kableExtra','dplyr','DT')
#Menampilkan tabel
kable(data[                        # Subsetting
unique(na.idx[, 1]),   # Vektor indeks baris yang mengandung NA
unique(na.idx[, 2])  ] # Vektor indeks kolom yang mengandung NA
# Style Tabel
) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
data <- data[ -unique(na.idx[, 1]),  ]
cat("Jumlah Baris:", nrow(data), "\n")
# Install dan muat paket stringr jika belum diinstal
install_load('stringr')
# Daftar kata kunci merek
brands <- c(
"HP", "Hewlett-Packard", "Acer", "Dell", "Lenovo", "ASUS",
"MSI", "Alienware", "Apple", "LG", "Samsung", "Aorus", "Gigabyte",
"Razer", "Microsoft", "Panasonic", "Chuwi", "Toshiba", "Fusion5")
# Fungsi untuk menetapkan merek berdasarkan kata kunci
assign_brand <- function(data) {
for (brand_keywords in brands) {
if (any(str_detect(tolower(data), tolower(brand_keywords)))) {
return(brand_keywords[1])  # Ambil merek pertama yang cocok
}
}
return("Tidak Diketahui")
}
# Menambahkan kolom brand berdasarkan fungsi
data$Brand <- sapply(data$Name, assign_brand)
# Tampilkan hasil
kable(head(data)) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Membuat bar chart persentase
ggplot(data = data %>% count(Brand) %>% # banyaknya laptop brand x
mutate(perc = round(n / sum(n) * 100)), #buat persentase
aes(x = reorder(Brand, -n), y = perc)) +
geom_bar(stat = "identity", fill='#2D99AE') +
geom_text(aes(label = prettyNum(n,big.mark = ",")
), vjust = -0.5, size = 8, col="orange4",
fontface = "bold") + # Tambahkan label
labs(x = "\nBrand", y = "Persentase (%)",
title = "Sebaran Brand Laptop") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme_modern_rc(axis_title_just = "center", base_size = 25,
axis_title_size = 30, plot_title_size = 35) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,
margin = margin(b = 10)),
axis.text.y = element_text(vjust = .5, face = "bold",
margin = margin(l = 20)),
plot.title = element_text(hjust = 0.5, face = "bold"),
text = element_text(size = 30),
plot.subtitle = element_text(hjust = 0.5)
)
data <- data %>%
mutate(`Brand` = relevel(as.factor(data$Brand), ref = "HP"))
str(data$Brand)
levels(data$Brand)
data <- data %>%
mutate(`Price (USD)` = as.numeric(gsub("\\$", "", Price)) / 100,
`Price (IDR)` =  `Price (USD)` * 15355.40 ) %>%
select(-Price)
kable(head(data)) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
install_load('ggridges','hrbrthemes','viridis')
ggplot(data, aes(x=`Price (USD)`, y=Brand, fill=Brand)) + geom_density_ridges() +
#COLORING
scale_fill_viridis(alpha = 0.75, #Opacity
begin = 0.1, #Color pallte scale begins
end = 0.9, #Color pallte scale ends
direction = -1, #Flip color scale
discrete = T, #Discrete Value
option = "D") + #Color Palette
theme_modern_rc(axis_title_just = "center", base_size = 16,
axis_title_size = 25, plot_title_size = 30) +
theme(plot.title = element_text(hjust=0.5),legend.position = "none") +
labs(x = "\nHarga (USD)",y = "Brand Laptop\n",
title = "Sebaran Harga Brand Laptop")
summary(data$`Price (USD)`)
summary(data$`Price (IDR)`)
model <- lm(`Price (USD)` ~ `Brand`,data=data)
summary(model)
data <- data %>%
mutate(`Ram (GB)` = as.numeric(gsub("GB RAM", "", RAM))) %>%
select(-RAM)
kable(head(data)) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Membuat bar chart persentase
ggplot(data = data %>% count(`Ram (GB)`) %>% # banyaknya laptop brand x
mutate(perc = round(n / sum(n) * 100)), #buat persentase,
aes(x = reorder(`Ram (GB)`, -n), y = perc)) +
geom_bar(stat = "identity", fill='#2D99AE') +
geom_text(aes(label = prettyNum(n,big.mark = ",")
), vjust = -0.5, size = 8, col="orange4",
fontface = "bold") + # Tambahkan label
labs(x = "\nRAM (GB)", y = "Persentase (%)",
title = "Sebaran RAM Laptop") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme_modern_rc(axis_title_just = "center", base_size = 25,
axis_title_size = 30, plot_title_size = 35) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,
margin = margin(b = 1)),
axis.text.y = element_text(vjust = .5, face = "bold",
margin = margin(l = 20)),
plot.title = element_text(hjust = 0.5, vjust =0.5,
face = "bold", margin = margin(b = 50)),
text = element_text(size = 30),
plot.subtitle = element_text(hjust = 0.5)
)
storage <- data %>%
mutate(`Storage (GB)` = as.numeric(str_extract(Storage, "\\d+")),
`Storage Type` = str_extract(Storage, "(SSD|HDD)")) %>%
select(`Storage (GB)`,`Storage Type`)
kable(head(storage)) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
plot.p(dt = storage$`Storage Type`, title = "Porporsi SSD dan HDD")
# Membuat bar chart persentase
ggplot(data = storage %>%
filter(grepl("SSD", `Storage Type`, ignore.case = TRUE))
%>% count(`Storage (GB)`) %>% # banyaknya laptop brand x
mutate(perc = round(n / sum(n) * 100)), #buat persentase,
aes(x = reorder(`Storage (GB)`, -n), y = perc)) +
geom_bar(stat = "identity", fill='#2D99AE') +
geom_text(aes(label = prettyNum(n,big.mark = ",")
), vjust = -0.5, size = 8, col="orange4",
fontface = "bold") + # Tambahkan label
labs(x = "\nSSD (GB)", y = "Persentase (%)",
title = "Sebaran SSD Laptop") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme_modern_rc(axis_title_just = "center", base_size = 25,
axis_title_size = 30, plot_title_size = 35) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,
margin = margin(b = 1)),
axis.text.y = element_text(vjust = .5, face = "bold",
margin = margin(l = 20)),
plot.title = element_text(hjust = 0.5, vjust =0.5,
face = "bold", margin = margin(b = 50)),
text = element_text(size = 30),
plot.subtitle = element_text(hjust = 0.5)
)
kable(data[data$`Storage` == "16GB SSD", ]) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Membuat bar chart persentase
ggplot(data = storage %>%
filter(grepl("HDD", `Storage Type`, ignore.case = TRUE))
%>% count(`Storage (GB)`) %>% # banyaknya laptop brand x
mutate(perc = round(n / sum(n) * 100)), #buat persentase,
aes(x = reorder(`Storage (GB)`, -n), y = perc)) +
geom_bar(stat = "identity", fill='#2D99AE') +
geom_text(aes(label = prettyNum(n,big.mark = ",")
), vjust = -0.5, size = 10, col="orange4",
fontface = "bold") + # Tambahkan label
labs(x = "\nHDD (GB)", y = "Persentase (%)",
title = "Sebaran HDD Laptop") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme_modern_rc(axis_title_just = "center", base_size = 25,
axis_title_size = 30, plot_title_size = 35) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,
margin = margin(b = 1)),
axis.text.y = element_text(vjust = .5, face = "bold",
margin = margin(l = 20)),
plot.title = element_text(hjust = 0.5, vjust =0.5,
face = "bold", margin = margin(b = 50)),
text = element_text(size = 30),
plot.subtitle = element_text(hjust = 0.5)
)
storage <- storage %>%
mutate(
`Storage Score` = ifelse(`Storage Type` == "SSD", `Storage (GB)` * (7.5/3.5),
`Storage (GB)` * (3.5/7.5))
)
kable(head(storage)) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
data <- data %>%
mutate(`Storage Score` = storage$`Storage Score`)
kable(head(data)) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
display <- data %>%
separate(Display, into = c("Screen Size (Inch)", "Resolution",
"Screen Type","Refresh Rate (Hz)" ),
sep = ", ", remove = FALSE) %>%
mutate(
# Menghapus karakter " dan mengubah menjadi numerik
`Screen Size (Inch)` = as.numeric(gsub("[^0-9.]", "", `Screen Size (Inch)`)),
#Tukar Kolom jika ada hz
temp = `Refresh Rate (Hz)`,
#Ubah hz jadi numerik
`Refresh Rate (Hz)` = ifelse(grepl("Hz", `Screen Type`),
as.numeric(gsub("[^0-9.]", "", `Screen Type`)),
#Jika tidak ada, beri nilai minimal hz laptop yakni 60 hz
60),
`Screen Type` = ifelse(grepl("Hz", `Screen Type`), temp, `Screen Type`)
) %>%
select(`Screen Size (Inch)`, Resolution, `Screen Type`, `Refresh Rate (Hz)`)
kable(head(display)) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
cat(" Jumlah Screen Size NA  :", sum(is.na(display$`Screen Size (Inch)`)), "\n",
"Jumlah Resolution NA   :", sum(is.na(display$Resolution)), "\n",
"Jumlah Screen Type NA  :", sum(is.na(display$`Screen Type`)), "\n",
"Jumlah Refresh Rate NA :", sum(is.na(display$`Refresh Rate (Hz)`)), "\n"
)
na.idx <- which(is.na(display[,3]), arr.ind = TRUE)
kable(data[ unique(na.idx[, 1]), unique(na.idx[, 2]) +3 ]) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
display <- display %>%
mutate(`Screen Type` = ifelse(is.na(`Screen Type`), "LCD", `Screen Type`))
kable(
display %>%
group_by(`Screen Type`) %>%
summarise(Total = n())
) %>%  kable_styling(bootstrap_options = "striped", full_width = FALSE)
display <- display %>%
mutate(
`Screen Type` = case_when(
`Screen Type` == "OLED" ~ "9",  `Screen Type` == "IPS" ~ "7",
`Screen Type` == "LCD" ~ "5",   `Screen Type` == "TN" ~ "3",
TRUE ~ `Screen Type`
), `Screen Type` = as.numeric(`Screen Type`)
)
kable(head(display)) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
kable(
display %>%
group_by(`Resolution`) %>%
summarise(Total = n())
) %>%  kable_styling(bootstrap_options = "striped", full_width = FALSE)
display <- display %>%
mutate( # Mencari semua kemungkinan pasangan angka dalam kolom "Resolution"
Resolution_Num = str_extract_all(Resolution, "\\d{2,}"),
# Mengambil pasangan angka yang memiliki dua angka di dalamnya
Resolution_Num = sapply(Resolution_Num,
function(x) if (length(x) == 2) paste(x, collapse = "x") else NA)
) %>% # Pisahkan "Width" dan "Height" dari "Resolution_Num"
separate(Resolution_Num, into = c("Width", "Height"), sep = "x",
convert = TRUE, remove = FALSE) %>%
# Berikan bobot jika ada kata PixelSense dalam kolom resolusi
mutate(
Resolution = ifelse(grepl("PixelSense", Resolution),
Width * Height * 1.125,
Width * Height)
) %>% select(-Resolution_Num, -Width, -Height)
kable(head(display)) %>%  kable_styling(bootstrap_options = "striped", full_width = FALSE)
display <- display %>%
mutate_all(rescale, to = c(10, 100)) %>%
mutate(`Display Score` = ((Resolution * `Screen Type`) /
`Screen Size (Inch)`) + `Refresh Rate (Hz)`)
kable(head(display)) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
data <- data %>% bind_cols(`Display Score` = display$`Display Score`)
kable(head(data)) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
rescale(c(10, 200, 230, 300), to = c(1, 10))
gc()
path <- function() gsub  ( "\\\\",  "/",  readClipboard ()  )
#Copy path, Panggil function di console
#Copy r path, paste ke var yang diinginkan
require("knitr")
opts_knit$set(root.dir = "C:/Users/Fathan/Documents/Obsidian Vault/2. Kuliah/Smt 5/8. Pengantar Sains Data/Proj")
#                      -=( Install & Load Package Function )=-
install_load <- function (package1, ...)  {
# convert arguments to vector
packages <- c(package1, ...)
# start loop to determine if each package is installed
for(package in packages){
# if package is installed locally, load
if(package %in% rownames(installed.packages()))
do.call('library', list(package))
# if package is not installed locally, download, then load
else {
install.packages(package)
do.call("library", list(package))
}
}
}
#                          -=( GGPLOT POSITION FUNCTION )=-
library(ggplot2)
position_stack_and_nudge <- function(x = 0, y = 0, vjust = 1, reverse = FALSE) {
ggproto(NULL, PositionStackAndNudge,
x = x,
y = y,
vjust = vjust,
reverse = reverse
)
}
#' @rdname ggplot2-ggproto
#' @format NULL
#' @usage NULL
#' @noRd
PositionStackAndNudge <- ggproto("PositionStackAndNudge", PositionStack,
x = 0,
y = 0,
setup_params = function(self, data) {
c(
list(x = self$x, y = self$y),
ggproto_parent(PositionStack, self)$setup_params(data)
)
},
compute_layer = function(self, data, params, panel) {
# operate on the stacked positions (updated in August 2020)
data = ggproto_parent(PositionStack, self)$compute_layer(data, params, panel)
x_orig <- data$x
y_orig <- data$y
# transform only the dimensions for which non-zero nudging is requested
if (any(params$x != 0)) {
if (any(params$y != 0)) {
data <- transform_position(data, function(x) x + params$x, function(y) y + params$y)
} else {
data <- transform_position(data, function(x) x + params$x, NULL)
}
} else if (any(params$y != 0)) {
data <- transform_position(data, function(x) x, function(y) y + params$y)
}
data$nudge_x <- data$x
data$nudge_y <- data$y
data$x <- x_orig
data$y <- y_orig
data
},
compute_panel = function(self, data, params, scales) {
ggproto_parent(PositionStack, self)$compute_panel(data, params, scales)
}
)
install_load('ggrepel')
#                             -=( Label Pie Chart )=-
lab.p <- list(
geom_label_repel( aes(label = paste0(perc,"(",n,")")),
position = position_stack_and_nudge(vjust = 0.5, x = 0.65),
direction='y', fontface = 'bold', color = 'white',
box.padding = unit(0.35, "lines"),
point.padding = unit(0.5, "lines"), segment.color = '#454545',
size=10)
)
#                           -=( THEME Pie Chart )=-
theme.p <- list(
theme_void()  ,
theme(
text = element_text(size = 36),
axis.text.y = element_text(vjust = .5, face = "bold"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5) )
)
#                           -=( Pie Chart FUNCTION )=-
plot.p <- function(dt, title = "Pice Chart"){
install_load("ggplot2", "dplyr", "viridis", "ggrepel", "tidyverse",'scales')
#DATA FRAME
df <- data.frame(ket = dt) %>%
#Frequency
group_by(ket) %>%
count() %>%
ungroup() %>%
mutate(perc = percent(n/sum(n), accuracy = 0.1, trim = FALSE))
#PIE CHART
sp <- ggplot(data=df, aes(x = "", y = n, fill = ket)) +
geom_col(width = 1, color = "white", linewidth = 2,
position = position_stack()) +
coord_polar(theta = "y") +
scale_alpha_manual(values = c("0"=0, "1"=1, "2"=0.7), guide=F) +
scale_x_discrete(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(title = title) + #Title
#COLORING
scale_fill_viridis(alpha = 0.75, #Opacity
begin = 0.2, #Color pallte scale begins
end = 0.5, #Color pallte scale ends
direction = -1, #Flip color scale
discrete = T, #Discrete Value
option = "D") + #Color Palette
theme.p + #Theme
xlab("") + ylab("") + lab.p #Labels
return(sp)
}
install_load('readxl','dplyr','kableExtra')
data <- read_xlsx("data.xlsx", sheet="Laptop")
data <- data[,-c(1,2)]
cat("Jumlah Kolom:", ncol(data), "\n")
cat("Jumlah Baris:", nrow(data), "\n")
kable(head(data)) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Mencari indeks baris dan kolom yang mengandung NA
na.idx <- which(is.na(data), arr.ind = TRUE)
cat("Banyaknya data NA : ", nrow(na.idx))
# Menampilkan data raw dengan baris dan kolom yang mengandung NA
install_load('kableExtra','dplyr','DT')
#Menampilkan tabel
kable(data[                        # Subsetting
unique(na.idx[, 1]),   # Vektor indeks baris yang mengandung NA
unique(na.idx[, 2])  ] # Vektor indeks kolom yang mengandung NA
# Style Tabel
) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
data <- data[ -unique(na.idx[, 1]),  ]
cat("Jumlah Baris:", nrow(data), "\n")
# Install dan muat paket stringr jika belum diinstal
install_load('stringr')
# Daftar kata kunci merek
brands <- c(
"HP", "Hewlett-Packard", "Acer", "Dell", "Lenovo", "ASUS",
"MSI", "Alienware", "Apple", "LG", "Samsung", "Aorus", "Gigabyte",
"Razer", "Microsoft", "Panasonic", "Chuwi", "Toshiba", "Fusion5")
# Fungsi untuk menetapkan merek berdasarkan kata kunci
assign_brand <- function(data) {
for (brand_keywords in brands) {
if (any(str_detect(tolower(data), tolower(brand_keywords)))) {
return(brand_keywords[1])  # Ambil merek pertama yang cocok
}
}
return("Tidak Diketahui")
}
# Menambahkan kolom brand berdasarkan fungsi
data$Brand <- sapply(data$Name, assign_brand)
# Tampilkan hasil
kable(head(data)) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Membuat bar chart persentase
ggplot(data = data %>% count(Brand) %>% # banyaknya laptop brand x
mutate(perc = round(n / sum(n) * 100)), #buat persentase
aes(x = reorder(Brand, -n), y = perc)) +
geom_bar(stat = "identity", fill='#2D99AE') +
geom_text(aes(label = prettyNum(n,big.mark = ",")
), vjust = -0.5, size = 8, col="orange4",
fontface = "bold") + # Tambahkan label
labs(x = "\nBrand", y = "Persentase (%)",
title = "Sebaran Brand Laptop") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme_modern_rc(axis_title_just = "center", base_size = 25,
axis_title_size = 30, plot_title_size = 35) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,
margin = margin(b = 10)),
axis.text.y = element_text(vjust = .5, face = "bold",
margin = margin(l = 20)),
plot.title = element_text(hjust = 0.5, face = "bold"),
text = element_text(size = 30),
plot.subtitle = element_text(hjust = 0.5)
)
install_load('hrbrthemes')
# Membuat bar chart persentase
ggplot(data = data %>% count(Brand) %>% # banyaknya laptop brand x
mutate(perc = round(n / sum(n) * 100)), #buat persentase
aes(x = reorder(Brand, -n), y = perc)) +
geom_bar(stat = "identity", fill='#2D99AE') +
geom_text(aes(label = prettyNum(n,big.mark = ",")
), vjust = -0.5, size = 8, col="orange4",
fontface = "bold") + # Tambahkan label
labs(x = "\nBrand", y = "Persentase (%)",
title = "Sebaran Brand Laptop") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme_modern_rc(axis_title_just = "center", base_size = 25,
axis_title_size = 30, plot_title_size = 35) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,
margin = margin(b = 10)),
axis.text.y = element_text(vjust = .5, face = "bold",
margin = margin(l = 20)),
plot.title = element_text(hjust = 0.5, face = "bold"),
text = element_text(size = 30),
plot.subtitle = element_text(hjust = 0.5)
)
