data = ggproto_parent(PositionStack, self)$compute_layer(data, params, panel)
x_orig <- data$x
y_orig <- data$y
# transform only the dimensions for which non-zero nudging is requested
if (any(params$x != 0)) {
if (any(params$y != 0)) {
data <- transform_position(data, function(x) x + params$x, function(y) y + params$y)
} else {
data <- transform_position(data, function(x) x + params$x, NULL)
}
} else if (any(params$y != 0)) {
data <- transform_position(data, function(x) x, function(y) y + params$y)
}
data$nudge_x <- data$x
data$nudge_y <- data$y
data$x <- x_orig
data$y <- y_orig
data
},
compute_panel = function(self, data, params, scales) {
ggproto_parent(PositionStack, self)$compute_panel(data, params, scales)
}
)
install_load('ggrepel')
#                             -=( Label Pie Chart )=-
lab.p <- list(
geom_label_repel( aes(label = paste0(perc,"(",n,")")),
position = position_stack_and_nudge(vjust = 0.5, x = 0.65),
direction='y', fontface = 'bold', color = 'white',
box.padding = unit(0.35, "lines"),
point.padding = unit(0.5, "lines"), segment.color = '#454545',
size=10)
)
#                           -=( THEME Pie Chart )=-
theme.p <- list(
theme_void()  ,
theme(
text = element_text(size = 36),
axis.text.y = element_text(vjust = .5, face = "bold"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5) )
)
#                           -=( Pie Chart FUNCTION )=-
plot.p <- function(dt, title = "Pice Chart"){
install_load("ggplot2", "dplyr", "viridis", "ggrepel", "tidyverse",'scales')
#DATA FRAME
df <- data.frame(ket = dt) %>%
#Frequency
group_by(ket) %>%
count() %>%
ungroup() %>%
mutate(perc = percent(n/sum(n), accuracy = 0.1, trim = FALSE))
#PIE CHART
sp <- ggplot(data=df, aes(x = "", y = n, fill = ket)) +
geom_col(width = 1, color = "white", linewidth = 2,
position = position_stack()) +
coord_polar(theta = "y") +
scale_alpha_manual(values = c("0"=0, "1"=1, "2"=0.7), guide=F) +
scale_x_discrete(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(title = title) + #Title
#COLORING
scale_fill_viridis(alpha = 0.75, #Opacity
begin = 0.2, #Color pallte scale begins
end = 0.5, #Color pallte scale ends
direction = -1, #Flip color scale
discrete = T, #Discrete Value
option = "D") + #Color Palette
theme.p + #Theme
xlab("") + ylab("") + lab.p #Labels
return(sp)
}
install_load('readxl','dplyr','kableExtra')
data <- read_xlsx("data.xlsx", sheet="Laptop")
data <- data[,-c(1,2)]
cat("Jumlah Kolom:", ncol(data), "\n")
cat("Jumlah Baris:", nrow(data), "\n")
kable(head(data)) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Mencari indeks baris dan kolom yang mengandung NA
na.idx <- which(is.na(data), arr.ind = TRUE)
cat("Banyaknya data NA : ", nrow(na.idx))
# Menampilkan data raw dengan baris dan kolom yang mengandung NA
install_load('kableExtra','dplyr','DT')
#Menampilkan tabel
kable(data[                        # Subsetting
unique(na.idx[, 1]),   # Vektor indeks baris yang mengandung NA
unique(na.idx[, 2])  ] # Vektor indeks kolom yang mengandung NA
# Style Tabel
) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
data <- data[ -unique(na.idx[, 1]),  ]
cat("Jumlah Baris:", nrow(data), "\n")
# Install dan muat paket stringr jika belum diinstal
install_load('stringr')
# Daftar kata kunci merek
brands <- c(
"HP", "Hewlett-Packard", "Acer", "Dell", "Lenovo", "ASUS",
"MSI", "Alienware", "Apple", "LG", "Samsung", "Aorus", "Gigabyte",
"Razer", "Microsoft", "Panasonic", "Chuwi", "Toshiba", "Fusion5")
# Fungsi untuk menetapkan merek berdasarkan kata kunci
assign_brand <- function(data) {
for (brand_keywords in brands) {
if (any(str_detect(tolower(data), tolower(brand_keywords)))) {
return(brand_keywords[1])  # Ambil merek pertama yang cocok
}
}
return("Tidak Diketahui")
}
# Menambahkan kolom brand berdasarkan fungsi
data$Brand <- sapply(data$Name, assign_brand)
# Tampilkan hasil
kable(head(data)) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Membuat bar chart persentase
ggplot(data = data %>% count(Brand) %>% # banyaknya laptop brand x
mutate(perc = round(n / sum(n) * 100)), #buat persentase
aes(x = reorder(Brand, -n), y = perc)) +
geom_bar(stat = "identity", fill='#2D99AE') +
geom_text(aes(label = prettyNum(n,big.mark = ",")
), vjust = -0.5, size = 7, col="orange4",
fontface = "bold") + # Tambahkan label
labs(x = "Brand", y = "Persentase (%)",
title = "Sebaran Brand Laptop") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme_minimal() + # Tambahkan tema minimal
theme(axis.text.x = element_text(angle = 45, hjust = 1,
margin = margin(b = 10)),
axis.text.y = element_text(vjust = .5, face = "bold",
margin = margin(l = 20)),
plot.title = element_text(hjust = 0.5, face = "bold"),
text = element_text(size = 30),
plot.subtitle = element_text(hjust = 0.5)
)
#Data Benchmark CPU
cpu <- read_xlsx("data.xlsx", sheet="CPU") %>%
select(1, 7:ncol(.)) %>% #Ambil data benchmark nya saja
mutate_at(vars(-1), ~as.numeric(gsub("n[0-9]+$", "", .))) #Ubah jadi numerik
cat("Jumlah Baris:", nrow(cpu), "\n")
kable(head(cpu)) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
install_load('scales')
cpu.score <- cpu %>%
mutate_at(vars(2:ncol(cpu)), rescale, to = c(10, 100)) %>% #Scaling
mutate_at(vars(2:ncol(cpu)), ~ ifelse(is.na(.), 0, .)) %>% #Na = 0
select(-one_of("Model")) %>% #Pilih kolom benchmark
as.matrix() %*% diag(c(10, 10, 9, 9, 8, 7, 6, 6, 8, 8, 7)) %>%  #Beri bobot
as.data.frame() %>%
mutate(Score = rowSums(across(where(is.numeric)))) %>% #Jumlahkan semua kolom
select(one_of("Score")) #Ambil kolom score aja
#Gabung data
cpu <- bind_cols(cpu %>% select(Model),  cpu.score %>% select(Score))
kable(head(cpu)) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Menggabungkan data
data <- data %>%
left_join(cpu, by = c("CPU" = "Model")) %>%
rename("CPU Score" = "Score")
kable(head(data)) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
cat("Banyaknya Laptop dengan Score CPU yang NA :", sum(is.na(data$`CPU Score`)))
NA.cpu_score <- data %>%
group_by(CPU) %>%
summarise(NA.cpu_score = sum(is.na(`CPU Score`))) %>%
filter(NA.cpu_score > 0)
cat("Banyaknya CPU dng Score yang NA :", nrow(NA.cpu_score))
kable(NA.cpu_score) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
boxp( dt =
data %>%
mutate(Index = 1:nrow(.)) %>%
filter(!is.na(`CPU Score`)) %>%
select(Index, `CPU Score`),
labs = data.frame(title='Sebaran CPU Score', ylab='', xlab='CPU Score')
)
data <- data %>%
mutate(`CPU Brand` = case_when(
grepl("Intel", CPU) ~ "Intel",
grepl("AMD", CPU) ~ "AMD",
grepl("Apple", CPU) ~ "Apple",
grepl("Mediatek", CPU) ~ "Mediatek",
grepl("Qualcomm", CPU) ~ "Qualcomm",
TRUE ~ "Other"
))
# Membuat bar chart persentase
ggplot(data = data %>% count(`CPU Brand`) %>% # banyaknya laptop brand x
mutate(perc = round(n / sum(n) * 100)), #buat persentase,
aes(x = reorder(`CPU Brand`, -n), y = perc)) +
geom_bar(stat = "identity", fill='#2D99AE') +
geom_text(aes(label = prettyNum(n,big.mark = ",")
), vjust = -0.5, size = 7, col="orange4",
fontface = "bold") + # Tambahkan label
labs(x = "Brand", y = "Persentase (%)",
title = "Sebaran Brand GPU Laptop") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme_minimal() + # Tambahkan tema minimal
theme(axis.text.x = element_text(angle = 45, hjust = 1,
margin = margin(b = 1)),
axis.text.y = element_text(vjust = .5, face = "bold",
margin = margin(l = 20)),
plot.title = element_text(hjust = 0.5, vjust =0.5,
face = "bold", margin = margin(b = 50)),
text = element_text(size = 30),
plot.subtitle = element_text(hjust = 0.5)
)
#Data Benchmark CPU
gpu <- read_xlsx("data.xlsx", sheet="GPU") %>%
select(1, 11:ncol(.)) %>% #Ambil data benchmark nya saja
#Ubah jadi numerik, hapus n123
mutate_at(vars(-1), ~as.numeric(gsub("n[0-9]+$", "", .))) #Ubah jadi numerik
cat("Jumlah Baris:", nrow(gpu), "\n")
kable(head(gpu)) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
gpu.score <- gpu %>%
mutate_at(vars(2:ncol(gpu)), rescale, to = c(0, 10)) %>% #Scaling
mutate_at(vars(2:ncol(gpu)), ~ ifelse(is.na(.), 0, .)) %>% #Na = 0
select(-one_of("Model")) %>% #Pilih kolom benchmark
as.matrix() %*% diag(c(5,5,5,7,7)) %>%  #Beri bobot
as.data.frame() %>%
mutate(Score = rowSums(across(where(is.numeric)))) %>% #Jumlahkan semua kolom
select(one_of("Score")) #Ambil kolom score aja
#Gabung data
gpu <- bind_cols(gpu %>% select(Model),  gpu.score %>% select(Score))
kable(head(gpu)) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Menggabungkan data
data <- data %>%
left_join(gpu, by = c("GPU" = "Model")) %>%
rename("GPU Score" = "Score")
kable(head(data)) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
cat("Banyaknya Laptop dengan Score GPU yang NA :", sum(is.na(data$`GPU Score`)))
NA.gpu_score <- data %>%
group_by(GPU) %>%
summarise(NA.gpu_score = sum(is.na(`GPU Score`))) %>%
filter(NA.gpu_score > 0)
cat("Banyaknya GPU dng Score yang NA :", nrow(NA.gpu_score))
kable(NA.gpu_score) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
boxp( dt =
data %>%
mutate(Index = 1:nrow(.)) %>%
filter(!is.na(`GPU Score`)) %>%
select(Index, `GPU Score`),
labs = data.frame(title='Sebaran GPU Score', ylab='', xlab='GPU Score')
)
data <- data %>%
mutate(`GPU Brand` = case_when(
str_detect(GPU, "NVIDIA") ~ "NVIDIA",
str_detect(GPU, "Intel") ~ "Intel",
str_detect(GPU, "ARM") ~ "ARM",
str_detect(GPU, "Imagination") ~ "Imagination",
str_detect(GPU, "Qualcomm") ~ "Qualcomm",
str_detect(GPU, "AMD") ~ "AMD",
str_detect(GPU, "Apple") ~ "Apple",
TRUE ~ "Unknown"  # Jika tidak ada yang cocok
))
# Membuat bar chart persentase
ggplot(data = data %>% count(`GPU Brand`) %>% # banyaknya laptop brand x
mutate(perc = round(n / sum(n) * 100)), #buat persentase,
aes(x = reorder(`GPU Brand`, -n), y = perc)) +
geom_bar(stat = "identity", fill='#2D99AE') +
geom_text(aes(label = prettyNum(n,big.mark = ",")
), vjust = -0.5, size = 7, col="orange4",
fontface = "bold") + # Tambahkan label
labs(x = "Brand", y = "Persentase (%)",
title = "Sebaran Brand GPU Laptop") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme_minimal() + # Tambahkan tema minimal
theme(axis.text.x = element_text(angle = 45, hjust = 1,
margin = margin(b = 1)),
axis.text.y = element_text(vjust = .5, face = "bold",
margin = margin(l = 20)),
plot.title = element_text(hjust = 0.5, vjust =0.5,
face = "bold", margin = margin(b = 50)),
text = element_text(size = 30),
plot.subtitle = element_text(hjust = 0.5)
)
data <- data %>%
mutate(`Price (USD)` = as.numeric(gsub("\\$", "", Price))) %>%
select(-Price)
kable(head(data)) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
boxp( dt =
data %>%
mutate(Index = 1:nrow(.)) %>%
filter(!is.na(`Price (USD)`)) %>%
select(Index, `Price (USD)`),
labs = data.frame(title='Sebaran Harga Laptop', ylab='', xlab='Harga Laptop')
)
data <- data %>%
mutate(`Ram (GB)` = as.numeric(gsub("GB RAM", "", RAM))) %>%
select(-RAM)
kable(head(data)) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Membuat bar chart persentase
ggplot(data = data %>% count(`Ram (GB)`) %>% # banyaknya laptop brand x
mutate(perc = round(n / sum(n) * 100)), #buat persentase,
aes(x = reorder(`Ram (GB)`, -n), y = perc)) +
geom_bar(stat = "identity", fill='#2D99AE') +
geom_text(aes(label = prettyNum(n,big.mark = ",")
), vjust = -0.5, size = 7, col="orange4",
fontface = "bold") + # Tambahkan label
labs(x = "RAM (GB)", y = "Persentase (%)",
title = "Sebaran RAM Laptop") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme_minimal() + # Tambahkan tema minimal
theme(axis.text.x = element_text(angle = 45, hjust = 1,
margin = margin(b = 1)),
axis.text.y = element_text(vjust = .5, face = "bold",
margin = margin(l = 20)),
plot.title = element_text(hjust = 0.5, vjust =0.5,
face = "bold", margin = margin(b = 50)),
text = element_text(size = 30),
plot.subtitle = element_text(hjust = 0.5)
)
storage <- data %>%
mutate(`Storage (GB)` = as.numeric(str_extract(Storage, "\\d+")),
`Storage Type` = str_extract(Storage, "(SSD|HDD)")) %>%
select(`Storage (GB)`,`Storage Type`)
kable(head(storage)) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
plot.p(dt = storage$`Storage Type`, title = "Porporsi SSD dan HDD")
# Membuat bar chart persentase
ggplot(data = storage %>%
filter(grepl("SSD", `Storage Type`, ignore.case = TRUE))
%>% count(`Storage (GB)`) %>% # banyaknya laptop brand x
mutate(perc = round(n / sum(n) * 100)), #buat persentase,
aes(x = reorder(`Storage (GB)`, -n), y = perc)) +
geom_bar(stat = "identity", fill='#2D99AE') +
geom_text(aes(label = prettyNum(n,big.mark = ",")
), vjust = -0.5, size = 7, col="orange4",
fontface = "bold") + # Tambahkan label
labs(x = "SSD (GB)", y = "Persentase (%)",
title = "Sebaran SSD Laptop") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme_minimal() + # Tambahkan tema minimal
theme(axis.text.x = element_text(angle = 45, hjust = 1,
margin = margin(b = 1)),
axis.text.y = element_text(vjust = .5, face = "bold",
margin = margin(l = 20)),
plot.title = element_text(hjust = 0.5, vjust =0.5,
face = "bold", margin = margin(b = 50)),
text = element_text(size = 30),
plot.subtitle = element_text(hjust = 0.5)
)
# Membuat bar chart persentase
ggplot(data = storage %>%
filter(grepl("HDD", `Storage Type`, ignore.case = TRUE))
%>% count(`Storage (GB)`) %>% # banyaknya laptop brand x
mutate(perc = round(n / sum(n) * 100)), #buat persentase,
aes(x = reorder(`Storage (GB)`, -n), y = perc)) +
geom_bar(stat = "identity", fill='#2D99AE') +
geom_text(aes(label = prettyNum(n,big.mark = ",")
), vjust = -0.5, size = 7, col="orange4",
fontface = "bold") + # Tambahkan label
labs(x = "HDD (GB)", y = "Persentase (%)",
title = "Sebaran HDD Laptop") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme_minimal() + # Tambahkan tema minimal
theme(axis.text.x = element_text(angle = 45, hjust = 1,
margin = margin(b = 1)),
axis.text.y = element_text(vjust = .5, face = "bold",
margin = margin(l = 20)),
plot.title = element_text(hjust = 0.5, vjust =0.5,
face = "bold", margin = margin(b = 50)),
text = element_text(size = 30),
plot.subtitle = element_text(hjust = 0.5)
)
storage <- storage %>%
mutate(
`Storage Score` = ifelse(`Storage Type` == "SSD", `Storage (GB)` * (7.5/3.5),
`Storage (GB)` * (3.5/7.5))
)
kable(head(storage)) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
data <- data %>%
mutate(`Storage Score` = storage$`Storage Score`)
kable(head(data)) %>% kable_styling(bootstrap_options = "striped", full_width = FALSE)
display <- data %>%
separate(Display, into = c("Screen Size (Inch)", "Resolution",
"Screen Type","Refresh Rate (Hz)" ),
sep = ", ", remove = FALSE) %>%
mutate(
# Menghapus karakter ” dan mengubah menjadi numerik
`Screen Size (Inch)` = as.numeric(gsub("[^0-9.]", "", `Screen Size (Inch)`)),
#Tukar Kolom jika ada hz
temp = `Refresh Rate (Hz)`,
`Refresh Rate (Hz)` = ifelse(grepl("Hz", `Screen Type`),
as.numeric(gsub("[^0-9.]", "", `Screen Type`)), #Ubah hz jadi numerik
60), #Jika tidak ada, beri nilai minimal hz laptop yakni 60 hz
`Screen Type` = ifelse(grepl("Hz", `Screen Type`), temp, `Screen Type`)
) %>%
select(`Screen Size (Inch)`, Resolution, `Screen Type`, `Refresh Rate (Hz)`)
kable(head(display)) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
cat(" Jumlah Screen Size NA  :", sum(is.na(display$`Screen Size (Inch)`)), "\n",
"Jumlah Resolution NA   :", sum(is.na(display$Resolution)), "\n",
"Jumlah Screen Type NA  :", sum(is.na(display$`Screen Type`)), "\n",
"Jumlah Refresh Rate NA :", sum(is.na(display$`Refresh Rate (Hz)`)), "\n"
)
na.idx <- which(is.na(display[,3]), arr.ind = TRUE)
kable(data[ unique(na.idx[, 1]), unique(na.idx[, 2]) +3 ]) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
display <- display %>%
mutate(`Screen Type` = ifelse(is.na(`Screen Type`), "LCD", `Screen Type`))
kable(
display %>%
group_by(`Screen Type`) %>%
summarise(Total = n())
) %>%  kable_styling(bootstrap_options = "striped", full_width = FALSE)
kable(
display %>%
group_by(`Resolution`) %>%
summarise(Total = n())
) %>%  kable_styling(bootstrap_options = "striped", full_width = FALSE)
display <- display %>%
mutate( # Mencari semua kemungkinan pasangan angka dalam kolom "Resolution"
Resolution_Num = str_extract_all(Resolution, "\\d{2,}"),
# Mengambil pasangan angka yang memiliki dua angka di dalamnya
Resolution_Num = sapply(Resolution_Num,
function(x) if (length(x) == 2) paste(x, collapse = "x") else NA)
) %>% # Pisahkan "Width" dan "Height" dari "Resolution_Num"
separate(Resolution_Num, into = c("Width", "Height"), sep = "x",
convert = TRUE, remove = FALSE) %>%
# Berikan bobot jika ada kata PixelSense dalam kolom resolusi
mutate(
Resolution = ifelse(grepl("PixelSense", Resolution),
Width * Height * 1.125,
Width * Height)
) %>% select(-Resolution_Num, -Width, -Height)
kable(head(display)) %>%  kable_styling(bootstrap_options = "striped", full_width = FALSE)
display <- display %>%
mutate(
`Screen Type` = case_when(
`Screen Type` == "OLED" ~ "9",  `Screen Type` == "IPS" ~ "7",
`Screen Type` == "LCD" ~ "5",   `Screen Type` == "TN" ~ "3",
TRUE ~ `Screen Type`
), `Screen Type` = as.numeric(`Screen Type`)
)
kable(head(display)) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
coba <- display %>%
mutate_all(rescale, to = c(10, 100)) %>%
mutate(`Display Score` = ((Resolution * `Screen Type`) /
`Screen Size (Inch)`) + `Refresh Rate (Hz)`)
display <- display %>%
mutate_all(rescale, to = c(10, 100)) %>%
mutate(`Display Score` = ((Resolution * `Screen Type`) /
`Screen Size (Inch)`) + `Refresh Rate (Hz)`)
kable(head(display)) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
str(display)
str(data)
coba <- display %>% bind_cols(data, display["Display Score"])
coba <- data
coba <- display %>% bind_cols(data, display["Display Score"])
colnames(coba)
coba <- data
coba <- display %>% bind_cols(data, display$`Display Score`)
colnames(coba)
coba <- data
coba <- data %>% bind_cols(Display_Score = display$`Display Score`)
data <- data %>% bind_cols(`Display Score` = display$`Display Score`)
kable(head(data)) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
colnames(data)
coba <- data %>%
relocate(Name, Brand, `Price (USD)`, `Ram (GB)`, CPU, `CPU Brand`,
`CPU Score`, GPU, `GPU Brand`, `GPU Score`, Display,
`Display Score`, Storage, `Storage Score`)
data <- data %>%
relocate(Name, Brand, `Price (USD)`, `Ram (GB)`, CPU, `CPU Brand`,
`CPU Score`, GPU, `GPU Brand`, `GPU Score`, Display,
`Display Score`, Storage, `Storage Score`)
kable(head(data)) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
data0 <- data %>%
mutate_all(~replace_na(., 0))
View(data0)
sum(is.na(data$Name))
sum(is.na(data$Brand))
sum(is.na(data$`Price (USD)`))
sum(is.na(data$`Ram (GB)`))
sum(is.na(data$CPU))
sum(is.na(data$`CPU Brand`))
sum(is.na(data$`CPU Score`))
sum(is.na(data$`GPU Score`))
sum(is.na(data$`GPU Brand`))
sum(is.na(data$`GPU`))
sum(is.na(data$Display))
sum(is.na(data$`Display Score`))
sum(is.na(data$Storage))
sum(is.na(data$`Storage Score`))
data0 <- data %>%
mutate_if(is.numeric, ~replace_na(., 0))
View(data0)
install_load('openxlsx')
# Menuliskan data frame pertama ke sheet "data"
write.xlsx(data, file = "managed.xlsx", sheet = "data")
# Menuliskan data frame pertama ke sheet "data"
write.xlsx(data, file = "managed.xlsx", sheetName="data")
# Menuliskan data frame kedua ke sheet "data NA=0"
write.xlsx(data0, file = "managed.xlsx", sheetName = "data NA=0")
# Menuliskan data frame pertama ke sheet "data"
write.xlsx(data, file = "managed.xlsx", sheetName="data")
# Menuliskan data frame kedua ke sheet "data NA=0"
write.xlsx(data0, file = "managed.xlsx", sheetName = "data NA=0", append=TRUE)
install_load('openxlsx')
write.xlsx(list("Data" = data, "Data NA=0" = data0),
file = "managed.xlsx")
colnames(data)
reg <- data %>%
select( "Price (USD)","Ram (GB)", "CPU Score", "GPU Score","Display Score", "Storage Score")
View(reg)
reg <- data0 %>%
select( "Price (USD)","Ram (GB)", "CPU Score", "GPU Score","Display Score", "Storage Score")
install_load('openxlsx')
write.xlsx(list("Data" = data, "Data NA=0" = data0, "Regresi" = reg),
file = "managed.xlsx")
