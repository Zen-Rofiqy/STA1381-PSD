color = "#F15E2B", size = 8)
chart
install_load('leaps')
best_subset <- regsubsets(UHH ~ PSTV05 +PSTV06 +PSTV07 +PSTV08 +PSTV09
+PSTV11 +PSTV12 +PSTV13, data=data_train, nvmax = 3)
install_load('leaps')
best_subset <- regsubsets(UHH ~ PSTV05 + PSTV06 + PSTV07 + PSTV08 + PSTV09 +
PSTV11 + PSTV12 + PSTV13, data = data_train,
nvmax = 3, really.big = TRUE)
chart <-
ggplot(best_subset, aes(x = n, y = aic)) +
geom_line(size=1) +
geom_point(size=4) +
geom_point(data = best_subset[which.min(best_subset$aic), ], color = "#F15E2B", size = 8) +
theme(plot.title = element_text(hjust=0.5),legend.position = "none") +
labs(x = "Jumlah Variabel Prediktor",
y='AIC',
title = "Pergerakan Nilai AIC",
subtitle = "Untuk Model terbaik, Nilai AIC yang terkecilnya berapa sih?\n") + theme1.1 +
theme(axis.text.y = element_text(vjust = 0.5, face = "bold",
margin = margin(l = 20, r = 10))) +
geom_text(aes(x = best_subset[which.min(best_subset$aic), ]$n + 1,
y = best_subset[which.min(best_subset$aic), ]$aic +20,
label = paste0("AIC = ", round(best_subset[which.min(best_subset$aic), ]$aic, 2),
"\nModel(", best_subset[which.min(best_subset$aic), ]$mindex, ")")),
color = "#F15E2B", size = 8)
best_subset
bs
chart <-
ggplot(bs, aes(x = n, y = aic)) +
geom_line(size=1) +
geom_point(size=4) +
geom_point(data = bs[which.min(bs$aic), ], color = "#F15E2B", size = 8) +
theme(plot.title = element_text(hjust=0.5),legend.position = "none") +
labs(x = "Jumlah Variabel Prediktor",
y='AIC',
title = "Pergerakan Nilai AIC",
subtitle = "Untuk Model terbaik, Nilai AIC yang terkecilnya berapa sih?\n") + theme1.1 +
theme(axis.text.y = element_text(vjust = 0.5, face = "bold",
margin = margin(l = 20, r = 10))) +
geom_text(aes(x = bs[which.min(bs$aic), ]$n + 1,
y = bs[which.min(bs$aic), ]$aic +20,
label = paste0("AIC = ", round(bs[which.min(bs$aic), ]$aic, 2),
"\nModel(", bs[which.min(bs$aic), ]$mindex, ")")),
color = "#F15E2B", size = 8)
chart
chart <-
ggplot(bs, aes(x = n, y = rsquare)) +
geom_line(size=1) +
geom_point(size=4) +
geom_point(data = bs[which.max(bs$rsquare), ], color = "#589E44", size = 8) +
geom_point(data = bs[which(bs$mindex  == 4), ], color = "#F15E2B", size = 5) +
theme(plot.title = element_text(hjust=0.5),legend.position = "none") +
labs(x = "Jumlah Variabel Prediktor",
y='Rsquare',
title = "Pergerakan Nilai Rsquare",
subtitle = "Untuk Model terbaik, Nilai Rsquare yang terbesarnya berapa sih?\n") +
theme1.1 +
theme(axis.text.y = element_text(vjust = 0.5, face = "bold",
margin = margin(l = 20, r = 10))) +
geom_text(aes(x = bs[which.max(bs$rsquare), ]$n -0.5,
y = bs[which.max(bs$rsquare), ]$rsquare -0.02,
label = paste0("Rsquare = ",
round(bs[which.max(bs$rsquare), ]$rsquare, 2),
"\nModel(", bs[which.max(bs$rsquare), ]$mindex, ")")),
color = "#589E44", size = 8) +
geom_text(aes(x = bs[which(bs$mindex == 4) , ]$n,
y = bs[which(bs$mindex == 4), ]$rsquare -0.015,
label = paste0("Rsquare = ", round(bs[which(bs$mindex  == 4),
]$rsquare, 2),
"\nModel(", bs[which(bs$mindex  == 4),
]$mindex, ")")),
color = "#F15E2B", size = 5)
chart
chart <-
ggplot(bs, aes(x = n, y = rsquare)) +
geom_line(size=1) +
geom_point(size=4) +
geom_point(data = bs[which.max(bs$rsquare), ], color = "#589E44", size = 8) +
geom_point(data = bs[which(bs$mindex  == 4), ], color = "#F15E2B", size = 5) +
theme(plot.title = element_text(hjust=0.5),legend.position = "none") +
labs(x = "Jumlah Variabel Prediktor",
y='Rsquare',
title = "Pergerakan Nilai Rsquare",
subtitle = "Untuk Model terbaik, Nilai Rsquare yang terbesarnya berapa sih?\n") +
theme1.1 +
theme(axis.text.y = element_text(vjust = 0.5, face = "bold",
margin = margin(l = 20, r = 10))) +
geom_text(aes(x = bs[which.max(bs$rsquare), ]$n -0.5,
y = bs[which.max(bs$rsquare), ]$rsquare -0.02,
label = paste0("Rsquare = ",
round(bs[which.max(bs$rsquare), ]$rsquare, 2),
"\nModel(", bs[which.max(bs$rsquare), ]$mindex, ")")),
color = "#589E44", size = 8)
chart
chart <-
ggplot(bs, aes(x = n, y = rsquare)) +
geom_line(size=1) +
geom_point(size=4) +
geom_point(data = bs[which.max(bs$rsquare), ], color = "#589E44", size = 8) +
theme(plot.title = element_text(hjust=0.5),legend.position = "none") +
labs(x = "Jumlah Variabel Prediktor",
y='Rsquare',
title = "Pergerakan Nilai Rsquare",
subtitle = "Untuk Model terbaik, Nilai Rsquare yang terbesarnya berapa sih?\n") +
theme1.1 +
theme(axis.text.y = element_text(vjust = 0.5, face = "bold",
margin = margin(l = 20, r = 10))) +
geom_text(aes(x = bs[which.max(bs$rsquare), ]$n -0.5,
y = bs[which.max(bs$rsquare), ]$rsquare -0.02,
label = paste0("Rsquare = ",
round(bs[which.max(bs$rsquare), ]$rsquare, 2),
"\nModel(", bs[which.max(bs$rsquare), ]$mindex, ")")),
color = "#589E44", size = 8)
chart
chart <-
ggplot(bs, aes(x = n, y = rsquare)) +
geom_line(size=1) +
geom_point(size=4) +
geom_point(data = bs[which.max(bs$rsquare), ], color = "#F15E2B", size = 8) +
theme(plot.title = element_text(hjust=0.5),legend.position = "none") +
labs(x = "Jumlah Variabel Prediktor",
y='Rsquare',
title = "Pergerakan Nilai Rsquare",
subtitle = "Untuk Model terbaik, Nilai Rsquare yang terbesarnya berapa sih?\n") +
theme1.1 +
theme(axis.text.y = element_text(vjust = 0.5, face = "bold",
margin = margin(l = 20, r = 10))) +
geom_text(aes(x = bs[which.max(bs$rsquare), ]$n -0.5,
y = bs[which.max(bs$rsquare), ]$rsquare -0.02,
label = paste0("Rsquare = ",
round(bs[which.max(bs$rsquare), ]$rsquare, 2),
"\nModel(", bs[which.max(bs$rsquare), ]$mindex, ")")),
color = "#F15E2B", size = 8)
chart
ols.bs[which(ols.bs$mindex == 8) , ]$predictors
bs[which(bs$mindex == 8) , ]$predictors
sapply(seq_along(data_train %>% select(-UHH)), function(i) {
colnames(data_test)
identical(levels(data_train[[i]]), levels(data_test[[i]]))
})
sapply(seq_along(data_train %>% select(-UHH)), function(i) {
print(colnames(data_test))
identical(levels(data_train[[i]]), levels(data_test[[i]]))
})
colnames(data_test)
sapply(seq_along(data_train %>% select(-UHH)), function(i) {
identical(levels(data_train[[i]]), levels(data_test[[i]]))
})
rbind(colnames(data_test),
sapply(seq_along(data_train %>% select(-UHH)), function(i) {
identical(levels(data_train[[i]]), levels(data_test[[i]]))
}))
View(rbind(colnames(data_test),
sapply(seq_along(data_train %>% select(-UHH)), function(i) {
identical(levels(data_train[[i]]), levels(data_test[[i]]))
})))
install_load('DT')
datatable(rbind( colnames(data_test),
sapply(seq_along(data_train %>% select(-UHH)), function(i) {
identical(levels(data_train[[i]]), levels(data_test[[i]]))
}) ),
filter = 'top',
options = list(pageLength = 5))
model  <- lm(UHH ~ PSTV05 +PSTV06 +PSTV07 +PSTV08 +PSTV09
+PSTV12 +PSTV13, data=data_train)
summary(model)
bs <- as.data.frame( olsrr::ols_step_best_subset(model)  )
install_load('DT')
lv <- rbind( colnames(data_test),
sapply(seq_along(data_train %>% select(-UHH)), function(i) {
identical(levels(data_train[[i]]), levels(data_test[[i]]))
}) )
datatable(lv,
filter = 'top',
options = list(pageLength = 5))
chart <-
ggplot(bs, aes(x = n, y = aic)) +
geom_line(size=1) +
geom_point(size=4) +
geom_point(data = bs[which.min(bs$aic), ], color = "#F15E2B", size = 8) +
theme(plot.title = element_text(hjust=0.5),legend.position = "none") +
labs(x = "Jumlah Variabel Prediktor",
y='AIC',
title = "Pergerakan Nilai AIC",
subtitle = "Untuk Model terbaik, Nilai AIC yang terkecilnya berapa sih?\n") + theme1.1 +
theme(axis.text.y = element_text(vjust = 0.5, face = "bold",
margin = margin(l = 20, r = 10))) +
geom_text(aes(x = bs[which.min(bs$aic), ]$n + 1,
y = bs[which.min(bs$aic), ]$aic +20,
label = paste0("AIC = ", round(bs[which.min(bs$aic), ]$aic, 2),
"\nModel(", bs[which.min(bs$aic), ]$mindex, ")")),
color = "#F15E2B", size = 8)
chart
chart <-
ggplot(bs, aes(x = n, y = rsquare)) +
geom_line(size=1) +
geom_point(size=4) +
geom_point(data = bs[which.max(bs$rsquare), ], color = "#F15E2B", size = 8) +
theme(plot.title = element_text(hjust=0.5),legend.position = "none") +
labs(x = "Jumlah Variabel Prediktor",
y='Rsquare',
title = "Pergerakan Nilai Rsquare",
subtitle = "Untuk Model terbaik, Nilai Rsquare yang terbesarnya berapa sih?\n") +
theme1.1 +
theme(axis.text.y = element_text(vjust = 0.5, face = "bold",
margin = margin(l = 20, r = 10))) +
geom_text(aes(x = bs[which.max(bs$rsquare), ]$n -0.5,
y = bs[which.max(bs$rsquare), ]$rsquare -0.02,
label = paste0("Rsquare = ",
round(bs[which.max(bs$rsquare), ]$rsquare, 2),
"\nModel(", bs[which.max(bs$rsquare), ]$mindex, ")")),
color = "#F15E2B", size = 8)
chart
bs[which(bs$mindex == 7) , ]$predictors
fs <- olsrr::ols_step_forward_p(model); fs
be <- olsrr::ols_step_backward_p(model); be
x <- model.matrix(UHH ~ PSTV05 +PSTV06 +PSTV07 +PSTV08 +PSTV09
+PSTV12 +PSTV13, data=data_train)[,-1]
y <- data_train[,1]
# Melakukan cross validation
install_load('glmnet')
cv.r <- cv.glmnet(x, y, alpha=0); plot(cv.r)
x <- model.matrix(UHH ~ PSTV05 +PSTV06 +PSTV07 +PSTV08 +PSTV09
+PSTV12 +PSTV13, data=data_train) %>% select(-UHH)
x <- model.matrix(UHH ~ PSTV05 +PSTV06 +PSTV07 +PSTV08 +PSTV09
+PSTV12 +PSTV13, data=data_train)
x
x <- model.matrix(UHH ~ PSTV05 +PSTV06 +PSTV07 +PSTV08 +PSTV09
+PSTV12 +PSTV13, data=data_train)[,-1]
y <- data_train %>% select(UHH)
# Melakukan cross validation
install_load('glmnet')
cv.r <- cv.glmnet(x, y, alpha=0); plot(cv.r)
str(x)
x <- model.matrix(UHH ~ PSTV05 +PSTV06 +PSTV07 +PSTV08 +PSTV09
+PSTV12 +PSTV13, data=data_train)[,-1]
y <- data_train$UHH
# Melakukan cross validation
install_load('glmnet')
cv.r <- cv.glmnet(x, y, alpha=0); plot(cv.r)
x <- model.matrix(UHH ~ PSTV05 +PSTV06 +PSTV07 +PSTV08 +PSTV09
+PSTV12 +PSTV13, data=data_train)[,-1]
y <- data_train$UHH
# Melakukan cross validation
install_load('glmnet')
cv.r <- cv.glmnet(x, y, alpha=0); plot(cv.r)
best.lr <- cv.r$lambda.min #Lambda Ridge Terbaik
best.ridge <- glmnet(x,y,alpha=0,lambda=best.lr); coef(best.ridge)
rsq <- function(bestmodel,bestlambda,x,y){
#y duga
y.duga <- predict(bestmodel, s = bestlambda, newx = x)
#JKG dan JKT
jkt <- sum((y - mean(y))^2)
jkg <- sum((y.duga- y)^2)
#find R-Squared
rsq <- 1 - jkg/jkt
return(rsq)
}
rsq <- function(bestmodel,bestlambda,x,y){
#y duga
y.duga <- predict(bestmodel, s = bestlambda, newx = x)
#JKG dan JKT
jkt <- sum((y - mean(y))^2)
jkg <- sum((y.duga- y)^2)
#find R-Squared
rsq <- 1 - jkg/jkt
return(rsq)
}
r2.ridge <- rsq(best.ridge, best.lr, x, y); r2.ridge
rsq <- function(bestmodel,bestlambda,x,y){
#y duga
y.duga <- predict(bestmodel, s = bestlambda, newx = x)
#JKG dan JKT
jkt <- sum((y - mean(y))^2)
jkg <- sum((y.duga- y)^2)
#find R-Squared
rsq <- 1 - jkg/jkt
return(rsq)
}
r2.ridge <- rsq(best.ridge, best.lr, x, y)
cat("R-Squared :", r2.ridge)
best.ll <- cv.l$lambda.min #Lambda Lasso Terbaik
cv.l <- cv.glmnet(x,y,alpha=1); plot(cv.l)
cv.l <- cv.glmnet(x,y,alpha=1); plot(cv.l)
best.ll <- cv.l$lambda.min #Lambda Lasso Terbaik
bestlasso <- glmnet(x,y,alpha=1,lambda=best.ll); coef(bestlasso)
r2.lasso <- rsq(bestlasso, best.ll, x, y)
cat("R-Squared :", r2.lasso)
View(model)
model$adj.r.squared
summary(model)$adj.r.squared
r2.dummy <- summary(model)$adj.r.squared
cat("R-Squared :", r2.ridge)
rsq <- data.frame(Dummy = r2.dummy, Ridge = r2.ridge, Lasso = r2.lasso)
rsq
rsq <- data.frame(Dummy = r2.dummy, Ridge = r2.ridge, Lasso = r2.lasso)
datatable(rsq,
filter = 'top',
options = list(pageLength = 5))
which.max(rsq)
max(rsq)
cat("R-Squared Terbaik :", which.max(rsq), "Dengan nilai :", max(rsq))
View(rsq)
cat("R-Squared Terbaik :", names(rsq)[which.max(rsq)],
"Dengan nilai :", max(rsq))
cat("R-Squared Terbaik :", names(rsq)[which.max(rsq)],
"\nDengan nilai :", max(rsq))
scatterplot(Au$origin,Au$mpg)
install_load("splines")
scatterplot(Au$origin,Au$mpg)
install_load("ISLR")
scatterplot(Au$origin,Au$mpg)
install_load("MLmetrics")
scatterplot(Au$origin,Au$mpg)
install_load("car")
scatterplot(Au$origin,Au$mpg)
dim(bs(data_train$PSTV05, knots=c(1.5,2.5)))
colnames(data_train)
mods1 <- lm(UHH ~ bs(PSTV05, knots=c(100, 150, 200)), data=data_train)
mods1 <- lm(UHH ~ bs(PSTV05, knots=c(100, 150, 200)), data=data_train)
summary(mods1)$r.square
marginalModelPlots(mods1)
weights <- 1 / lm(abs(model$residuals) ~ model$fitted.values)$fitted.values^2
model.wls <- lm(UHH ~ PSTV05 +PSTV06 +PSTV07 +PSTV08 +PSTV09
+PSTV12 +PSTV13, data=data_train, weights = weights)
summary(model.wls)
r2.dummy <- summary(model)$adj.r.squared
cat("R-Squared :", r2.dummy)
r2.wls <- summary(model.wls)$adj.r.squared
cat("R-Squared :", r2.wls)
rsq <- data.frame(Dummy = r2.dummy, WLS = r2.wls, Ridge = r2.ridge,
Lasso = r2.lasso)
datatable(rsq,
filter = 'top',
options = list(pageLength = 5))
cat("R-Squared Terbaik :", names(rsq)[which.max(rsq)],
"\nDengan nilai :", max(rsq))
?cv.glmnet
best.lr
best.lr <- cv.r$lambda.min #Lambda Ridge Terbaik
best.ridge <- glmnet(x,y,alpha=0,lambda=best.lr)
best.lr <- cv.r$lambda.min #Lambda Ridge Terbaik
best.ridge <- glmnet(x,y,alpha=0,lambda=best.lr)
lr1 <- cv.r$lambda
ridge1 <- glmnet(x,y,alpha=0,lambda=lr1)
rsq <- function(bestmodel,bestlambda,x,y){
#y duga
y.duga <- predict(bestmodel, s = bestlambda, newx = x)
#JKG dan JKT
jkt <- sum((y - mean(y))^2)
jkg <- sum((y.duga- y)^2)
#find R-Squared
rsq <- 1 - jkg/jkt
return(rsq)
}
r2.ridge <- rsq(best.ridge, best.lr, x, y)
cat("R-Squared :", r2.ridge)
r2.ridge2 <- rsq(ridge1, lr1, x, y)
cat("R-Squared :", r2.ridge2)
lambda
lr1
mean(lr1)
best.lr
best.lr <- cv.r$lambda.min #Lambda Ridge Terbaik
best.ridge <- glmnet(x,y,alpha=0,lambda=best.lr)
lr1 <- cv.r$lambda;  lr1 <-mean(lr1)
ridge1 <- glmnet(x,y,alpha=0,lambda=lr1)
rsq <- function(bestmodel,bestlambda,x,y){
#y duga
y.duga <- predict(bestmodel, s = bestlambda, newx = x)
#JKG dan JKT
jkt <- sum((y - mean(y))^2)
jkg <- sum((y.duga- y)^2)
#find R-Squared
rsq <- 1 - jkg/jkt
return(rsq)
}
r2.ridge <- rsq(best.ridge, best.lr, x, y)
cat("R-Squared :", r2.ridge)
r2.ridge2 <- rsq(ridge1, lr1, x, y)
cat("\nR-Squared :", r2.ridge2)
best.lr <- cv.r$lambda.min #Lambda Ridge Terbaik
best.ridge <- glmnet(x,y,alpha=0,lambda=best.lr)
lr1 <- cv.r$lambda;  lr1 <-mean(lr1)
ridge1 <- glmnet(x,y,alpha=0,lambda=lr1)
lr2 <- cv.r$lambda;  lr2 <-max(lr2)
ridge2 <- glmnet(x,y,alpha=0,lambda=lr2)
rsq <- function(bestmodel,bestlambda,x,y){
#y duga
y.duga <- predict(bestmodel, s = bestlambda, newx = x)
#JKG dan JKT
jkt <- sum((y - mean(y))^2)
jkg <- sum((y.duga- y)^2)
#find R-Squared
rsq <- 1 - jkg/jkt
return(rsq)
}
r2.ridge <- rsq(best.ridge, best.lr, x, y)
cat("R-Squared :", r2.ridge)
r2.ridge1 <- rsq(ridge1, lr1, x, y)
cat("\nR-Squared :", r2.ridge1)
r2.ridge2 <- rsq(ridge2, lr2, x, y)
cat("\nR-Squared :", r2.ridge2)
best.lr
min(cv.r$lambda)
pre <- predict(best.ridge, newdata = data_train)
pre <- predict(best.ridge, s=best.lr, newx = data_train)
pre <- predict(best.ridge, s=best.lr, newx = as.matrix(data_train))
View(data_train)
pre <- predict(best.ridge, s=best.lr,
newx = data_train %>%
select(-PSTV04, -PSTV10, -PSTV11, -PSTV14))
View(    select(-PSTV04, -PSTV10, -PSTV11, -PSTV14)))
View(data_train %>%
select(-PSTV04, -PSTV10, -PSTV11, -PSTV14))
pre <- predict(best.ridge, s=best.lr,
newx = data_test %>%
select(-PSTV04, -PSTV10, -PSTV11, -PSTV14))
str(data_test)
best.ridge
coef(best.ridge)
pre <- predict(best.ridge, s=best.lr,
newx = data_test %>%
select(-PSTV04, -PSTV10, -PSTV11, -PSTV14) %>% as.matrix())
str(data_train)
str(data_test)
pre <- predict(best.ridge, s=best.lr,
newx = data_test %>%
select(PSTV05, PSTV06, PSTV07, PSTV08, PSTV09, PSTV12, PSTV13))
x.pre <- data_test %>%
select(-PSTV04, -PSTV10, -PSTV11, -PSTV14)
x.pre <- model.matrix(UHH ~ ., data = x.pre)[,-1]
x.pre <- data_test %>%
select(-PSTV04, -PSTV10, -PSTV11, -PSTV14)
x.pre <- model.matrix(UHH$data_train ~ ., data = x.pre)[,-1]
x.pre <- data_test %>%
select(-PSTV04, -PSTV10, -PSTV11, -PSTV14)
x.pre <- model.matrix(data_train$UHH ~ ., data = x.pre)[,-1]
pre <- predict(best.ridge, s=best.lr, newx = x)
pre <- predict(best.ridge, s=best.lr, newx = x)
datatable(pre,
filter = 'top',
options = list(pageLength = 5))
colnames(data_train)
#Step 1 - create the evaluation metrics function
eval_metrics = function(model, df, predictions, target){
resids = df[,target] - predictions
resids2 = resids**2
N = length(predictions)
r2 = as.character(round(summary(model)$r.squared, 2))
adj_r2 = as.character(round(summary(model)$adj.r.squared, 2))
print(adj_r2) #Adjusted R-squared
print(as.character(round(sqrt(sum(resids2)/N), 2))) #RMSE
}
# Step 3 - predicting and evaluating the model on test data
predictions = predict(model, newdata = data_test)
eval_metrics(model, data_test, predictions, target = 'UHH')
predictions
x
pre <- predict(best.ridge, s=best.lr, newx = x)
pre <- data.frame( No = seq_len(nrow(pre)),  UHH = pre )
datatable(pre,
filter = 'top',
options = list(pageLength = 5))
pre <- predict(best.ridge, s=best.lr, newx = x)
pre <- data.frame( No = seq_len(nrow(pre)),  UHH = pre ) %>%
rename(No, UHH)
pre <- predict(best.ridge, s=best.lr, newx = x)
pre <- data.frame( No = seq_len(nrow(pre)),  UHH = pre ) %>%
rename(s1 = UHH)
pre <- predict(best.ridge, s=best.lr, newx = x)
pre <- data.frame( No = seq_len(nrow(pre)),  UHH = pre ) %>%
rename("No", "UHH")
pre <- predict(best.ridge, s=best.lr, newx = x)
pre <- data.frame( No = seq_len(nrow(pre)),  UHH = pre )
colnames(pre) <- c("No", "UHH")
datatable(pre,
filter = 'top',
options = list(pageLength = 5))
pre <- predict(best.ridge, s=best.lr, newx = x)
pre <- data.frame( No = seq_len(nrow(pre)),  UHH = pre )
colnames(pre) <- c("No", "UHH")
datatable(pre,
filter = 'top',
options = list(pageLength = 5))
write.csv(pre, "predict.csv", row.names=FALSE)
?read.csv()
View(read.csv('predict.csv'))
path()
#Set Working Directory
require("knitr")
opts_knit$set(root.dir = "C:/Users/Fathan/Documents/Obsidian Vault/2. Kuliah/Smt 5/8. Pengantar Sains Data/Tugas/TM 2")
View(read.csv('predict.csv'))
#Set Working Directory
require("knitr")
opts_knit$set(root.dir = "C:/Users/Fathan/Documents/Obsidian Vault/2. Kuliah/Smt 5/8. Pengantar Sains Data/Tugas/TM 2")
View(read.csv('predict.csv'))
mmk <- read.csv('predict.csv')
mmk <- read.csv('predict.csv', sep=',')
setwd() = "C:/Users/Fathan/Documents/Obsidian Vault/2. Kuliah/Smt 5/8. Pengantar Sains Data/Tugas/TM 2"
setwd("C:/Users/Fathan/Documents/Obsidian Vault/2. Kuliah/Smt 5/8. Pengantar Sains Data/Tugas/TM 2")
mmk <- read.csv('predict.csv')
path()
mmk <- read.csv('C:/Users/Fathan/Documents/Obsidian Vault/2. Kuliah/Smt 5/8. Pengantar Sains Data/Tugas/TM 2/predict.csv')
View(mmk)
path()
mmk <- read.csv('C:/Users/Fathan/Documents/Obsidian Vault/2. Kuliah/Smt 5/8. Pengantar Sains Data/Tugas/TM 2/Sample Submission.csv')
View(mmk)
str(x)
+PSTV12 +PSTV13, data=data_test)[,-1]
+PSTV12 +PSTV13, data=data_train)[,-1]
