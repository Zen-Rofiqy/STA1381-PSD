#                      -=( Install & Load Package Function )=-
install_load <- function (package1, ...)  {
# convert arguments to vector
packages <- c(package1, ...)
# start loop to determine if each package is installed
for(package in packages){
# if package is installed locally, load
if(package %in% rownames(installed.packages()))
do.call('library', list(package))
# if package is not installed locally, download, then load
else {
install.packages(package)
do.call("library", list(package))
}
}
}
path <- function(){
gsub  ( "\\\\",  "/",  readClipboard ()  )
}
#Copy path, Panggil function di console
#Copy r path, paste ke var yang diinginkan
#Export chart
export.chart <- "C:/Users/Fathan/Documents/Obsidian Vault/2. Kuliah/Smt 5/8. Pengantar Sains Data/Tugas/Tugas Akhir/Chart"
#SetWD
require("knitr")
opts_knit$set(root.dir = "C:/Users/Fathan/Documents/Obsidian Vault/2. Kuliah/Smt 5/8. Pengantar Sains Data/Tugas/Tugas Akhir")
install_load('rio')
raw.data1 <- import("https://raw.githubusercontent.com/Zen-Rofiqy/STA1381-PSD/main/Tugas/Tugas%20Akhir/Data%20PSD.csv")
raw.data2 <- import("https://raw.githubusercontent.com/Zen-Rofiqy/STA1381-PSD/main/Tugas/Tugas%20Akhir/Data%20PSD_Perc.csv")
raw.data3 <- import("https://raw.githubusercontent.com/Zen-Rofiqy/STA1381-PSD/main/Tugas/Tugas%20Akhir/Data%20PSD_Desa.csv")
install_load("ppclust", "factoextra", "dplyr", "cluster", "fclust", "psych",
"FactoMineR", "ggplot2", "fmsb")
dtx <- raw.data2[-35,-1]
pairs.panels(dtx, method = "pearson", stars=TRUE)
boxplot(dtx)
#calculate gap statistic for each number of clusters (up to 10 clusters)
gap_stat <- clusGap(dtx, FUN = hcut, nstart = 25, K.max = 10, B = 50)
#produce plot of clusters vs. gap statistic
fviz_gap_stat(gap_stat)
res.fcm <- fcm(dtx, centers=3)
as.data.frame(res.fcm$u)[1:6,]
res.fcm$v0
res.fcm$v
summary(res.fcm)
res.fcm <- fcm(dtx, centers=3, nstart=5)
res.fcm$func.val
res.fcm$iter
res.fcm$best.start
summary(res.fcm)
plotcluster(res.fcm, cp=1, trans=TRUE)
#                      -=( Install & Load Package Function )=-
install_load <- function (package1, ...)  {
# convert arguments to vector
packages <- c(package1, ...)
# start loop to determine if each package is installed
for(package in packages){
# if package is installed locally, load
if(package %in% rownames(installed.packages()))
do.call('library', list(package))
# if package is not installed locally, download, then load
else {
install.packages(package)
do.call("library", list(package))
}
}
}
path <- function(){
gsub  ( "\\\\",  "/",  readClipboard ()  )
}
#Copy path, Panggil function di console
#Copy r path, paste ke var yang diinginkan
#Export chart
export.chart <- "C:/Users/Fathan/Documents/Obsidian Vault/2. Kuliah/Smt 5/8. Pengantar Sains Data/Tugas/Tugas Akhir/Chart"
#SetWD
wd <- "C:/Users/Fathan/Documents/Obsidian Vault/2. Kuliah/Smt 5/8. Pengantar Sains Data/Tugas/Tugas Akhir"
require("knitr")
opts_knit$set(root.dir = wd)
install_load('rio')
raw.data1 <- import("https://raw.githubusercontent.com/Zen-Rofiqy/STA1381-PSD/main/Tugas/Tugas%20Akhir/Data%20PSD.csv")
raw.data2 <- import("https://raw.githubusercontent.com/Zen-Rofiqy/STA1381-PSD/main/Tugas/Tugas%20Akhir/Data%20PSD_Perc.csv")
raw.data3 <- import("https://raw.githubusercontent.com/Zen-Rofiqy/STA1381-PSD/main/Tugas/Tugas%20Akhir/Data%20PSD_Desa.csv")
str(raw.data1)
str(raw.data2)
str(raw.data3)
sum(is.na(raw.data1))
sum(is.na(raw.data2))
sum(is.na(raw.data3))
install_load("DT")
datatable(raw.data1, filter = 'top',
options = list(pageLength = 10))
datatable(raw.data2, filter = 'top',
options = list(pageLength = 10))
datatable(raw.data3, filter = 'top',
options = list(pageLength = 10))
install_load("ppclust", "factoextra", "dplyr", "cluster", "fclust", "psych",
"FactoMineR", "ggplot2", "fmsb")
dtx <- raw.data2[-35,-1]
pairs.panels(dtx, method = "pearson", stars=TRUE)
boxplot(dtx)
library("mclust")
mod1 = Mclust(dtx)
mod1$BIC
#                      -=( Install & Load Package Function )=-
install_load <- function (package1, ...)  {
# convert arguments to vector
packages <- c(package1, ...)
# start loop to determine if each package is installed
for(package in packages){
# if package is installed locally, load
if(package %in% rownames(installed.packages()))
do.call('library', list(package))
# if package is not installed locally, download, then load
else {
install.packages(package)
do.call("library", list(package))
}
}
}
path <- function(){
gsub  ( "\\\\",  "/",  readClipboard ()  )
}
#Copy path, Panggil function di console
#Copy r path, paste ke var yang diinginkan
#Export chart
export.chart <- "C:/Users/Fathan/Documents/Obsidian Vault/2. Kuliah/Smt 5/8. Pengantar Sains Data/Tugas/Tugas Akhir/Chart"
#SetWD
wd <- "C:/Users/Fathan/Documents/Obsidian Vault/2. Kuliah/Smt 5/8. Pengantar Sains Data/Tugas/Tugas Akhir"
require("knitr")
opts_knit$set(root.dir = wd)
install_load('rio')
raw.data1 <- import("https://raw.githubusercontent.com/Zen-Rofiqy/STA1381-PSD/main/Tugas/Tugas%20Akhir/Data%20PSD.csv")
raw.data2 <- import("https://raw.githubusercontent.com/Zen-Rofiqy/STA1381-PSD/main/Tugas/Tugas%20Akhir/Data%20PSD_Perc.csv")
raw.data3 <- import("https://raw.githubusercontent.com/Zen-Rofiqy/STA1381-PSD/main/Tugas/Tugas%20Akhir/Data%20PSD_Desa.csv")
str(raw.data1)
str(raw.data2)
str(raw.data3)
sum(is.na(raw.data1))
sum(is.na(raw.data2))
sum(is.na(raw.data3))
install_load("DT")
datatable(raw.data1, filter = 'top',
options = list(pageLength = 10))
datatable(raw.data2, filter = 'top',
options = list(pageLength = 10))
datatable(raw.data3, filter = 'top',
options = list(pageLength = 10))
install_load("ppclust", "factoextra", "dplyr", "cluster", "fclust", "psych",
"FactoMineR", "ggplot2", "fmsb")
dtx <- raw.data2[-35,-1]
pairs.panels(dtx, method = "pearson", stars=TRUE)
boxplot(dtx)
library("mclust")
mod1 = Mclust(dtx)
mod1$BIC
plot(mod1, what = 'BIC')
mod1b = Mclust(dtx, G = 5, modelNames = c("VEI"))
summary(mod1b, parameters = TRUE)
library(dplyr)
# Menghitung frekuensi observasi di setiap kluster
cluster_frequencies <- table(mod1b$classification)
# Mengurutkan kluster berdasarkan frekuensinya
sorted_clusters <- names(sort(cluster_frequencies, decreasing = TRUE))
# Membuat urutan kluster yang diinginkan (1, 2, 3, 4, 5)
new_order <- 1:length(sorted_clusters)
# Menukar isi kluster dengan urutan yang dihasilkan
mod1b$classification <- recode(mod1b$classification, !!!setNames(as.character(new_order), sorted_clusters))
table(mod1b$classification)
library(factoextra)
fviz_cluster(mod1b, data = dtx, repel = TRUE, labelsize =8)
data.clust1 <- cbind(dtx, Cluster = mod1b[["classification"]])
# Calculate the mean of each variable for each cluster
cluster_profiles1 <- aggregate(. ~ Cluster, data.clust1, mean)
# Print the cluster profiles
print(cluster_profiles1)
# Convert the data to long format for plotting
cluster_profiles_long1 <- tidyr::pivot_longer(cluster_profiles1, -Cluster,
names_to = "Variable", values_to = "Value")
# Create the bar plot
ggplot(cluster_profiles_long1, aes(x = Cluster, y = Value, fill = Variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Cluster", y = "Mean Value", fill = "Variable") +
theme_minimal() +
ggtitle("Cluster Profiles")
library(ggiraphExtra)
data.akhir1 <- cbind(raw.data2[-35,], Cluster =  mod1b[["classification"]]) %>%
relocate(Cluster, .before = 2)
# Radar Plot
ggRadar(
data = data.akhir1,
mapping = aes(colours = Cluster),
) +
theme_light() +
theme(
text = element_text(size = 10),  # Mengubah ukuran font global
title = element_text(size = 12),  # Mengubah ukuran font judul
axis.text = element_text(size = 10),  # Mengubah ukuran font label sumbu
legend.text = element_text(size = 8)  # Mengubah ukuran font legenda
)
install_load("spdep","rgdal")
indo <- st_read(dsn= paste0(wd,"/SHP Indonesia/prov.shp"),
quiet = TRUE)
data.map <- cbind(data.clust1, KODE=raw.data3$KODE[-35])
data.indo <- indo %>%
inner_join(data.map, by = c("KODE" = "KODE"))
ggplot() +
geom_sf(data=data.indo, aes(fill=factor(`Cluster`))) +
scale_fill_manual(values=c("1" = "indianred", "2" = "lightgreen", "3" = "dodgerblue",
"4"="cyan3", "5"="purple3"),
name = "Keterangan") +
labs(title = "Cluster Bencana Alam \n pada Provinsi Indonesia 2021",
x = "Longitude",
y = "Latitude") +
theme_minimal() +
theme(legend.text = element_text(size=10),
legend.title = element_text(size=10, face="bold"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
plot.title = element_text(size=12, face="bold", hjust = 0.5)) +
scale_x_continuous(labels = function(x) paste0(x, "°")) +
scale_y_continuous(labels = function(y) paste0(y, "°"))
#calculate gap statistic for each number of clusters (up to 10 clusters)
gap_stat <- clusGap(dtx, FUN = hcut, nstart = 25, K.max = 10, B = 50)
#produce plot of clusters vs. gap statistic
fviz_gap_stat(gap_stat)
View(data.akhir1)
#Export Data
install_load('openxlsx')
#Model Tentatif
write.xlsx(list("GMM" = data.akhir1),
file = "Data_Cluster.xlsx")
library(ggiraphExtra)
data.akhir1 <- cbind(raw.data2[-35,], Cluster =  mod1b[["classification"]]) %>%
relocate(Cluster, .before = 2)
# Radar Plot
ggRadar(
data = data.akhir1,
mapping = aes(colours = Cluster),
) +
theme_light() +
theme(
text = element_text(size = 10),  # Mengubah ukuran font global
title = element_text(size = 12),  # Mengubah ukuran font judul
axis.text = element_text(size = 10),  # Mengubah ukuran font label sumbu
legend.text = element_text(size = 8)  # Mengubah ukuran font legenda
)
library(ggiraphExtra)
data.akhir1 <- cbind(raw.data2[-35,], Cluster =  mod1b[["classification"]]) %>%
relocate(Cluster, .before = 2)
# Radar Plot
ggRadar(
data = data.akhir1,
mapping = aes(colours = Cluster),
) +
theme_light() +
theme(
text = element_text(size = 10),  # Mengubah ukuran font global
title = element_text(size = 12),  # Mengubah ukuran font judul
axis.text = element_text(size = 10),  # Mengubah ukuran font label sumbu
legend.text = element_text(size = 8)  # Mengubah ukuran font legenda
)
?ggRadar
library(ggiraphExtra)
data.akhir1 <- cbind(raw.data2[-35,], Cluster =  mod1b[["classification"]]) %>%
relocate(Cluster, .before = 2)
# Radar Plot
ggRadar(
data = data.akhir1,
mapping = aes(colours = Cluster),
use.label = TRUE
) +
theme_light() +
theme(
text = element_text(size = 10),  # Mengubah ukuran font global
title = element_text(size = 12),  # Mengubah ukuran font judul
axis.text = element_text(size = 10),  # Mengubah ukuran font label sumbu
legend.text = element_text(size = 8)  # Mengubah ukuran font legenda
)
library(ggiraphExtra)
data.akhir1 <- cbind(raw.data2[-35,], Cluster =  mod1b[["classification"]]) %>%
relocate(Cluster, .before = 2)
# Radar Plot
ggRadar(
data = data.akhir1,
mapping = aes(colours = Cluster)
) +
theme_light() +
theme(
text = element_text(size = 10),  # Mengubah ukuran font global
title = element_text(size = 12),  # Mengubah ukuran font judul
axis.text = element_text(size = 10),  # Mengubah ukuran font label sumbu
legend.text = element_text(size = 8)  # Mengubah ukuran font legenda
)
